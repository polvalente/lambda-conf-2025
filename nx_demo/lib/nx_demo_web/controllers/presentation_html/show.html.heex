<div class="reveal">
  <div class="slides">
    <section>
      <h2>Machine Learning in Elixir</h2>
      <p>
        <small>
          <a href="https://github.com/polvalente" target="_blank" rel="noopener noreferrer">
            Paulo Valente
            <br />
            GitHub: @polvalente
          </a>
        </small>
      </p>
    </section>
    <section>
      <h2>About Me</h2>
      <ul>
        <li>Brazilian</li>
        <li>Electronics and Computer Engineer (UFRJ)</li>
        <li>Software Engineer at TV Labs</li>
        <li>Numerical Elixir (Nx) Core Team Member</li>
      </ul>
    </section>
    <section>
      <h2>Why use Nx?</h2>
      <ul>
        <li> Your problem is well suited for Elixir usage </li>
        <li> Your problem requires numerical computing (AI, DataFrames, etc.) </li>
        <p style="text-align: center;">OR</p>
        <li> You don't want to deal with yet another language in your stack </li>
        <li> You want functional data structures for numerical processing </li>
      </ul>
    </section>
    <section>
      <h2>What is Nx?</h2>
      <ul>
        <li>Numerical computing library and ecosystem for Elixir</li>
        <li>Started by Jos√© Valim (creator of Elixir) and Sean Moriarity</li>
        <li>I jumped in when the library went public! (early 2021)</li>
        <li>Inspired by NumPy, JAX, and TensorFlow</li>
        <li>Enables fast, multi-dimensional array operations</li>
        <li>Supports CPU, GPU, and distributed computation</li>
      </ul>
    </section>
    <section>
      <h2>The Ecosystem</h2>
      <table>
        <thead>
          <tr>
            <th>Library</th>
            <th>Description</th>
            <th>Hex.pm</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Nx</td>
            <td>Core library</td>
            <td>nx</td>
          </tr>
          <tr>
            <td>Axon</td>
            <td>Neural network library</td>
            <td>axon</td>
          </tr>
          <tr>
            <td>Bumblebee</td>
            <td>Hugging Face models loaded into Axon</td>
            <td>bumblebee</td>
          </tr>
          <tr>
            <td>Explorer</td>
            <td>DataFrames</td>
            <td>explorer</td>
          </tr>
          <tr>
            <td>Evision</td>
            <td>OpenCV bindings</td>
            <td>evision</td>
          </tr>
          <tr>
            <td>Scholar</td>
            <td>Classical Machine Learning</td>
            <td>scholar</td>
          </tr>
          <tr>
            <td>EXGBoost</td>
            <td>Gradient Boosting</td>
            <td>exgboost</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section>
      <h2>The Ecosystem</h2>
      <table>
        <thead>
          <tr>
            <th>Library</th>
            <th>Description</th>
            <th>Hex.pm</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>NxSignal</td>
            <td>scipy.signal port</td>
            <td>nx_signal</td>
          </tr>
          <tr>
            <td>VegaLite</td>
            <td>Low-level data visualization</td>
            <td>vega_lite</td>
          </tr>
          <tr>
            <td>Tucan</td>
            <td>Higher-level data visualization</td>
            <td>tucan</td>
          </tr>
          <tr>
            <td>Rein</td>
            <td>Reinforcement Learning</td>
            <td>rein</td>
          </tr>
        </tbody>
      </table>
    </section>
    <!-- Nx Function Example Slide -->
    <section>
      <h2>How Nx works</h2>
      <ul>
        <li>Nx provides functions to create and manipulate tensors</li>
        <li>These functions will internally generate a nested computation graph, called Nx.Defn.Expr</li>
      </ul>
    </section>
    <section>
      <h2>How Nx works</h2>
      <ul>
        <li>When you call the function, it will traverse and execute (optionally compiling) the Defn expression</li>
        <li>Configurable compilers will be able to target different devices</li>
      </ul>
    </section>
    <section>
      <h2>How Nx works</h2>
      <ul>
        <li>Nx.Defn.Expr allows us to JIT compile the Nx code at Elixir runtime</li>
        <li>The code can then be deployed to:
          <ul>
            <li>GPU</li>
            <li>CPU</li>
            <li>Browser, via WASM</li>
            <li>iOS, via LiveView Native</li>
          </ul>
        </li>
      </ul>
    </section>
    <section>
      <h2>Backends and Compilers</h2>
      <ul>
        <li>Nx.BinaryBackend: default backend, written in Elixir</li>
        <li>Nx.Defn.Expr: meta-backend used for the tracing compiler</li>
      </ul>
    </section>
    <section>
      <h2>Backends and Compilers</h2>
      <table>
        <thead>
          <tr>
            <th>Library</th>
            <th>Engine</th>
            <th>Targets</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>EXLA</td>
            <td>OpenXLA</td>
            <td>x86, aarch64, CUDA</td>
          </tr>
          <tr>
            <td>Torchx</td>
            <td>PyTorch</td>
            <td>x86, aarch64, CUDA</td>
          </tr>
          <tr>
            <td>NxIREE</td>
            <td>IREE compiler and runtime</td>
            <td>x86, aarch64, arm, risc-v, CUDA, Vulkan, Metal, WebAssembly</td>
          </tr>
          <tr>
            <td>EMLX</td>
            <td>Apple's MLX</td>
            <td>aarch64, Metal</td>
          </tr>
        </tbody>
      </table>
    </section>
    <.livebook_link url={@livebook_session_url} anchor="nx-defn-example" />
    <!-- Thank You Slide -->
    <section>
      <h2>Thank you!</h2>
      <p>
        Questions? <br />
        <p style="font-size: 0.8em; color: #888">
          Or reach out later:
          <br />
          X and GitHub: @polvalente
          <br />
          BlueSky: @polvalente.social
        </p>
        <p>
          Code and presentation available at:
          <a href="https://github.com/polvalente/lambda-conf-2025" target="_blank" rel="noopener noreferrer">
            https://github.com/polvalente/lambda-conf-2025
          </a>
        </p>
      </p>
    </section>
  </div>
</div>